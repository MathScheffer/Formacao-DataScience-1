cls
clear
x <- c(1,2,3,4,5)
x
plot(iris(,1:4))
plot(Iris(,1:4))
x.
plot(Iris(,1:4))
plot(Iris(,1:4))
```{r}
install.packages("e1071")
library(e1071)
getwd()
class(ires)
remove.packages("e1071")
install.packages("e1071")
install.packages("e1071")
library(e1071)
class(ires)
plot(ires[1:4])
install.packages("e1071")
remove.packages("e1071")
install.packages("e1071")
remove.packages(e1071)
install.packages("e1071")
install.packages("e1071")
library(e1071)
plot(ires[1:4])
plot(iris[1:4])
class(ires)
class(iris)
plot(iris[,1:4])
setwd('/pratica-em-r/aspectos-diversos')
setwd('/pratica-em-r/aspectos-diversos')
setwd('/pratica-em-r/aspectos-diversos'),
setwd('/pratica-em-r/aspectos-diversos')
setwd('//pratica-em-r/aspectos-diversos')
setwd('//pratica-em-r/aspectos-diversos')
getwd()
setwd('//estudos/formacao-datascience/pratica-em-r/aspectos-diversos')
setwd('//estudos/Formacao-datascience/pratica-em-r/aspectos-diversos')
setwd('//estudos/Formacao-datascience/pratica-em-r/aspectos-diversos')
getwd()
setwd('estudos/Formacao-datascience/pratica-em-r/aspectos-diversos')
getwd()
save(iriteste,"iristeste.save")
save(iriteste,"iristeste.Rdata")
save(iristeste,"iristeste.Rdata")
save(iristeste,file="iristeste.Rdata")
iristeste = iris
save(iristeste,file="iristeste.Rdata")
rm(iristeste)
iristeste
setwd('estudos/Formacao-datascience/pratica-em-r/aspectos-diversos')
getwd()
load("iristeste.Rdata")
iristeste
x = c(12,34,56,79)
y = c(1,6,9,14)
plot(x,y)
delta = 8
delta
delta = 8.0
delta
delta = 8.1
delta
delta = 8L
delta
class(delta)
class(delta)
delta = 8.1
class(delta)
delta = 8L
delta
class(delta)
string = "Texto"
class(string)
verdadeiro = TRUE
falso = F
class(verdadeiro)
class(falso)
(a + b) * 2
a = 2
b = 5
(a + b) * 2
a == b
b > a
a < b
a != B
a == b
b > a
a < b
a != b
sqrt(2500)
vetor = c(1,2,3)
vetor
vetor[1]
vetor[2] = 12
vetor
vetorString
vetorString
vetor = c(1,2,3)
vetor
vetor[1]
vetor[2] = 12
vetor
vetorString = c("a","b","c")
vetorString
vetor = c(1,2,3)
vetor
vetor[1]
vetor[2] = 12
vetor
vetorString = c("a","b","c")
vetorString
class(vetorString)
class(vetorString)
vetor = c(1,2,3)
vetor
vetor[1]
vetor[2] = 12
vetor
vetorString = c("a","b","c")
vetorString
class(vetor)
class(vetorString)
VADeaths
collnames(VADeaths)
colnames(VADeaths)
rawnames(VADeaths)
rownames(VADeaths)
VADeaths
VADeaths
VADeaths
VADeaths(,1)
VADeaths[],1]
VADeaths[,1]
VADeaths[,1]
VADeaths[,2]
VADeaths[,3]
VADeaths[1,]
VADeaths
#Seleciona os dados da
VADeaths[,1]
#Seleciona os dados da
VADeaths[,1]
VADeaths[1,]
VADeaths[1:2]
VADeaths[1:2]
#trago a
VADeaths[1:3]
#trago a
VADeaths[2:3]
#retorno itens específicos da coluna 1
VADeaths[c(1,3,5)]
#retorno itens específicos da coluna 1
VADeaths[c(1,3,5),]
#retorno itens específicos de todas as colunas
VADeaths[c(1,3,5),]
#retorno itens específicos de todas as colunas
VADeaths[c(1,3,5),1]
#retorno itens específicos de todas as colunas
VADeaths[c(1,3,5),1:2]
#retorno itens específicos de todas as colunas
VADeaths[c(1,3,5),]
#retorno itens específicos de colunas específicas
VADeaths[c(1,3,5),2:3]
VADeaths[c(1,3,5),c(1,3)]
#retorno itens específicos de colunas específicas
VADeaths[c(1,3,5),2:3]
#retorno itens específicos de colunas específicas
VADeaths[c(1,3,5),2:3]
VADeaths[c(1,3,5),c(1,3)]
#Seleciona os dados por coluna
VADeaths[,1]
#seleciona os dados por linha
VADeaths[1,]
#trago do item 2 até o item 3 da coluna 1
VADeaths[2:3]
#retorno itens específicos da coluna 1
VADeaths[c(1,3,5)]
#retorno itens específicos de todas as colunas
VADeaths[c(1,3,5),]
#retorno itens específicos de colunas específicas
VADeaths[c(1,3,5),2:3]
VADeaths[c(1,3,5),c(1,3)]
#retorno itens específicos de colunas específicas
VADeaths[c(1,3,5),2:3]
VADeaths[c(1,3,5),c(1,3)]
#retorno itens específicos de colunas específicas
VADeaths[c(1,3,5),2:3]
VADeaths[c(1,3,5),c(1,3)]
longley
longley[1,]
longley[c(1,3,5),2:3]
#Podemos acessar por nome da coluna:
longley["GNP"]
longley
#
longley$Unemployed
longley
#acesso igual aos da matriz:
longley[c(1,3,5),2:3]
#Podemos acessar por nome da coluna:
longley["GNP"]
#pego a coluna e a retorno como um vetor
longley$Unemployed
ability.cov
ability.cov.cov
ability.cov
ability.cov$cov
ability.cov
#Acessando elementos dentro de uma lista:
ability$center
#Acessando elementos dentro de uma lista:
ability.cov$center
ability.cov$n.obs
ability.cov
ability.cov$cov
ability
state.region
```{r}
sexo <- c("Masculino", "Feminino", "Feminino", "Feminino", "Masculino", "Feminino", "Masculino", "Masculino", "Feminino", "Feminino")
sexo
sexo.asFactor()
sexo
fator_sexo = as.factor(sexo)
fator_sexo
fator_sexo
sexo <- c("Masculino", "Feminino", "Feminino", "Feminino", "Masculino", "Feminino", "Masculino", "Masculino", "Feminino", "Feminino")
sexo
fator_sexo = as.factor(sexo)
fator_sexo
fator_sexo["Masculino"]
fator_sexo[1]
sexo <- c("Masculino", "Feminino", "Masculino", "Feminino", "Masculino", "Masculino", "Feminino", "Feminino")
sexo
fator_sexo = as.factor(sexo)
fator_sexo
sexo <- c("Masculino", "Masculino", "Feminino", "Masculino", "Masculino", "Feminino", "Feminino")
sexo
fator_sexo = as.factor(sexo)
fator_sexo
sexo <- c("Masculino", "Masculino", "Feminino", "Masculino", "Masculino", "Feminino", "Feminino","Outro")
sexo
fator_sexo = as.factor(sexo)
fator_sexo
fator_sexo.Levels
fator_sexo
